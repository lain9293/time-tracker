{"version":3,"sources":["utils/uuid.js","utils/localStorage.js","utils/timeCalc.js","index.js"],"names":["uuidv4","replace","c","r","Math","random","toString","localStore","getItem","key","type","value","window","localStorage","JSON","parse","setItem","stringify","removeItem","clear","timeSum","t1","t2","split","map","Number","hT1","mT1","rH","rM","App","useState","d","date","Date","days","setDays","newDay","setNewDay","currentDay","setCurrentDay","id","description","time","newAction","setNewAction","dateOptions","year","month","day","onClick","toLocaleString","actions","length","a","reduce","acc","newDays","filter","deleteDay","idDay","idActive","deleteActive","onSubmit","e","preventDefault","addNewAction","placeholder","onChange","target","addNewDay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc26803b.chunk.js","sourcesContent":["const uuidv4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport default uuidv4;","const localStore = {\n  getItem: (key, type) => { \n    const value = window.localStorage.getItem(key);\n    if (value) {\n      return JSON.parse(value);\n    }\n    switch (type) {\n      case 'Array':\n        return [];\n      case 'Object':\n        return {};\n      default:\n        return ''\n    }\n  },\n\n  setItem: (key, value) => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  },\n\n  removeItem: (key) => {\n    window.localStorage.removeItem(key);\n  },\n\n  clear: () => {\n    window.localStorage.clear();\n  },\n};\n\nexport default localStore;","const timeSum = (t1, t2) => {\n  const [hT1, mT1] = t1.split(':').map(Number);\n  const [hT2, mT2] = t2.split(':').map(Number);\n  let rH = hT1 + hT2;\n  let rM = mT1 + mT2;\n  if (rM >= 60) {\n    rH++;\n    rM -= 60;\n  }\n  return `${rH < 10 ? '0' + rH : rH}:${rM < 10 ? '0' + rM : rM}`;\n}\n\nexport default timeSum;","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport uuidv4 from './utils/uuid.js'\nimport localStore from './utils/localStorage.js'\nimport timeSum from './utils/timeCalc.js'\n\nconst App = () => {\n  const [days, setDays] = useState(\n    localStore.getItem('days', 'Array').map((d) => {\n      return { ...d, date: Date(d.date) }\n    })\n  )\n  const [newDay, setNewDay] = useState(new Date())\n  const [currentDay, setCurrentDay] = useState('')\n  const [newAction, setNewAction] = useState({\n    id: uuidv4(),\n    description: '',\n    time: '',\n  })\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  }\n\n  const addNewDay = () => {\n    const id = uuidv4()\n    const newDays = [...days, { id, date: newDay, actions: [] }]\n    setDays(newDays)\n    setCurrentDay(id)\n    localStore.setItem('days', newDays)\n  }\n\n  const selectCurrentDay = (id) => {\n    if (currentDay === id) {\n      setCurrentDay('')\n    } else {\n      setCurrentDay(id)\n    }\n  }\n\n  const addNewAction = (e, id) => {\n    e.preventDefault()\n    const newDays = days.map((d) => {\n      if (d.id === id) {\n        d.actions = [...d.actions, newAction]\n      }\n      return d\n    })\n    setDays(newDays)\n    localStore.setItem('days', newDays)\n    setNewAction({ id: uuidv4(), description: '', time: '' })\n  }\n\n  const deleteDay = (id) => {\n    const newDays = days.filter((d) => d.id !== id)\n    setDays(newDays)\n    localStore.setItem('days', newDays)\n  }\n\n  const deleteActive = (idDay, idActive) => {\n    const newDays = days.map((d) => {\n      if (d.id === idDay) {\n        d.actions = d.actions.filter(a => a.id !== idActive);\n      }\n      return d;\n    })\n    setDays(newDays)\n    localStore.setItem('days', newDays)\n  }\n\n  const formatDate = (date) => {\n    if (typeof date === 'string') {\n      return new Date(date).toLocaleString('ru', dateOptions)\n    }\n    return date.toLocaleString('ru', dateOptions)\n  }\n\n  return (\n    <div>\n      <ul>\n        {days.map((d) => (\n          <li key={d.id}>\n            <span onClick={() => selectCurrentDay(d.id)}>\n              Дата: {formatDate(d.date)} Сумма времени:\n              {d.actions.length &&\n                d.actions\n                  .map((a) => a.time)\n                  .reduce((acc, a) => timeSum(a, acc))}\n            </span>\n            {currentDay === d.id ? (\n              <span>\n                <span>{'  << Текущий день  '}</span>\n                <input\n                  type=\"button\"\n                  value=\"Удалить день\"\n                  onClick={() => deleteDay(d.id)}\n                />\n              </span>\n            ) : (\n              ''\n            )}\n            {currentDay === d.id && (\n              <div>\n                <ul>\n                  {d.actions.map((a) => (\n                    <li key={a.id}>\n                      Описание: {a.description} Время: {a.time} \n                      <input type=\"button\" value=\"Удалить активность\" onClick={() => deleteActive(d.id, a.id)}/>\n                    </li>\n                  ))}\n                </ul>\n                <form type=\"submit\" onSubmit={(e) => addNewAction(e, d.id)}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Описание\"\n                    value={newAction.description}\n                    onChange={(e) => {\n                      setNewAction({\n                        ...newAction,\n                        description: e.target.value,\n                      })\n                    }}\n                  />\n                  <input\n                    type=\"time\"\n                    value={newAction.time}\n                    onChange={(e) => {\n                      setNewAction({\n                        ...newAction,\n                        time: e.target.value,\n                      })\n                    }}\n                  />\n                  <input type=\"submit\" value=\"Добавить\" />\n                </form>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n      <input\n        type=\"date\"\n        value={newDay}\n        onChange={(e) => {\n          setNewDay(e.target.value)\n        }}\n      />\n      <input type=\"button\" value=\"Добавить день\" onClick={() => addNewDay()} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}